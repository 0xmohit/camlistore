-- add dev-server flag and support in camlistore.org/pkg/webserver to
   control latency & bandwidth, to simulate slow connections (phones,
   etc).  can just wrap the net.Listener interface and that we're
   already giving to http.Server with one that returns wrapped slow
   net.Conns with variable latency and such.  no need to plumb through
   flags or variables to pkg/webserver... can just use environ vars.

-- Go 1: convert all the fuse code & camlistore.org/pkg/fs to use rsc/fuse
   (get cammount and webdav working again)

-- read/write fuse.

-- work on runsit more, so I can start using this more often.  runsit should
   be able to reload itself, and also watch for binaries changing and restart
   when binaries change.  (or symlinks to binaries)

-- BUG: ./dev-server and hitting http://localhost:3179/ shouldn't mention
   the /setup handler.

-- add gofmt check to "make presubmit". also add "make fmt" target.

-- BUG: osutil paths.go on OS X: should use Library everywhere instead of mix of
   Library and ~/.camlistore?

OLD:

-- add CROS support?
   http://hacks.mozilla.org/2009/07/cross-site-xmlhttprequest-with-cors/

-- Go: ditch our http Range header stuff, get in upstream Go

-- camput: support for skipping common cache/temp files

-- camget: finish.  it's barely started.  should be able to cat blobs
   or restore filesytems from backup.

-- fuse read/write support using search / camliMember, permanode per inode
   (https://github.com/hanwen/go-fuse + Go camlistore client == easy?)

-- brackup integration, perhaps sans GPG? (requires Perl client?)

-- blobserver test suite: flesh it out.  (bs-test.pl ... it's pretty good
   so far, but not done)
-- blobserver: clean up channel-closing consistency in blobserver interface
   (most close, one doesn't.  all should probably close)

Android:

[ ] Fix wake locks in UploadThread.  need to hold CPU + WiFi whenever
    something's enqueued at all and we're running.  Move out of the Thread
    that's uploading itself.
[ ] GPG signing of blobs (brad)
    http://code.google.com/p/android-privacy-guard/
    http://www.thialfihar.org/projects/apg/
    (supports signing in code, but not an Intent?)
    http://code.google.com/p/android-privacy-guard/wiki/UsingApgForDevelopment
    ... mailed the author.

Client libraries:

[X] Go (Brad)
[/] JavaScript (Brad)
[/] Python (Brett)
[ ] Perl
[ ] Ruby
[ ] PHP
